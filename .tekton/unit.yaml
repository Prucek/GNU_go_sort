apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: unit
spec:
  description: >-
    Unit tests
  params:
    - description: 'Snapshot of the application'
      name: SNAPSHOT
      default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
      type: string
  workspaces:
    - name: tests-workspace
  tasks:
    - name: test-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/tekton-integration-catalog.git
          - name: serverURL
            value: https://github.com
          - name: revision
            value: main
          - name: pathInRepo
            value: common/tasks/test-metadata/0.2/test-metadata.yaml
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: test-name
          value: $(context.pipelineRun.name)
      workspaces:
        - name: output
          workspace: tests-workspace
    - name: git-clone
      runAfter:
        - test-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/build-definitions.git
          - name: serverURL
            value: https://github.com
          - name: revision
            value: main
          - name: pathInRepo
            value: task/git-clone/0.1/git-clone.yaml
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: url
          value: "$(tasks.test-metadata.results.job-spec.git.url)"
        - name: test-name
          value: "unit tests"
      workspaces:
        - name: output
          workspace: tests-workspace
    - name: go-unit-test
      runAfter:
        - git-clone
      description: Run unit tests
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
      workspaces:
        - name: output
          workspace: tests-workspace
      taskSpec:
        params:
        - name: SNAPSHOT
        results:
        - name: TEST_OUTPUT
          description: Test output
        steps:
        - image: docker.io/library/golang:latest
          env:
          - name: SNAPSHOT
            value: $(params.SNAPSHOT)
          script: |
            go test ./... -v